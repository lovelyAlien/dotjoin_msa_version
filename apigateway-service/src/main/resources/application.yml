server:
  port: 8000

eureka:
  client:
    register-with-eureka: true #수정됨
    fetch-registry: true #수정됨
    service-url:
      defaultZone: http://localhost:8761/eureka

  instance:
    instance-id: ${spring.cloud.client.ip-address}:${spring.application.instance_id:${random.value}}
    prefer-ip-address: true


spring:
  application:
    name: apigateway-service
  cloud:
    gateway:
      default-filters:
        - name: GlobalFilter
          args:
            baseMessage: Spring Cloud Gateway Gloabl Filter
            preLogger: true
            postLogger: true

      routes:
        - id: first-service
          uri: lb://MY-FIRST-SERVICE #수정됨
          predicates:
            - Path=/first-service/**
          filters:
#            - AddRequestHeader: first-request, It is first request!
#            - AddResponseHeader: first-response, It is first response!
            - name: CustomFilter
            - name: LoggingFilter
              args:
                baseMessage: Spring Clout Gateway Logging Filter
                preLogger: true
                postLogger: true
            - RemoveRequestHeader=Cookie
            - RewritePath=/first-service/(?<segment>.*), /$\{segment}

        - id: second-service
          uri: lb://MY-SECOND-SERVICE #수정됨
          predicates:
            - Path=/second-service/**


        - id: user-service
          uri: lb://USER-SERVICE #수정됨
          predicates:
            - Path=/user-service/login
            - Method=POST
          filters:
            - RemoveRequestHeader=Cookie
            - RewritePath=/user-service/(?<segment>.*), /$\{segment}


        - id: user-service
          uri: lb://USER-SERVICE #수정됨
          predicates:
            - Path=/user-service/users
            - Method=POST
          filters:
            - RemoveRequestHeader=Cookie
            - RewritePath=/user-service/(?<segment>.*), /$\{segment}


        - id: user-service
          uri: lb://USER-SERVICE #수정됨
          predicates:
            - Path=/user-service/**
            - Method=GET
          filters:
            - RemoveRequestHeader=Cookie
            - RewritePath=/user-service/(?<segment>.*), /$\{segment}
            - AuthorizationHeaderFilter

token:
  secret: user_token